<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns="http://www.springframework.org/schema/security"
             xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd">


    <http use-expressions="true" create-session="ifRequired" auto-config="true">

        <!--ัะท-->
        <remember-me/>
        <csrf disabled="true"/>

        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/home" access="hasRole('ROLE_USER')"/>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/**/*.png" access="permitAll"/>
        <intercept-url pattern="/**/*.css" access="permitAll"/>
        <intercept-url pattern="/**" access="denyAll"/>

        <!-- the login page is a wicket page mounted in WicketApplication.init() -->
        <form-login login-page="/login"/>

        <logout logout-url="/logout" invalidate-session="true" logout-success-url="/login"/>

    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <user-service>
                <user name="user" password="user" authorities="ROLE_USER"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>

    <!-- This filter is responsible for storing the SecurityContextHolder between
        requests. Also see SecureWebSession.authenticate(). -->
    <beans:bean id="securityContextPersistenceFilter"
                class="org.springframework.security.web.context.SecurityContextPersistenceFilter"/>


</beans:beans>